spring:
#  config:
#    import: vault://
  cloud:
    vault:
      uri: http://vault-ui.dev.svc.cluster.local  # Vault ?? ??
      authentication: token
      token: ${VAULT_SECRET}
      kv:
        enabled: true
        backend: secret
        default-context: mysql
  datasource:
    url: jdbc:mysql://dev-mysql-project-lb-d1f0e-26116540-bb792267ebda.kr.lb.naverncp.com:4002/community
    username: root
    password: tndtlfthvmxm1!
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
  application:
    name: project-service
  kafka:
    bootstrap-servers: kafka.dev.svc.cluster.local
    consumer:
      group-id: sidekick
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
server:
  port: 8081

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://eureka-service.dev.svc.cluster.local/eureka
    enabled: false
  instance:
    hostname: localhost
    prefer-ip-address: true

#logging:
#  level:
#    org.springframework.cloud.vault: DEBUG
#    org.springframework.boot: DEBUG
#    com.zaxxer.hikari: DEBUG